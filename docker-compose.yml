services:
  backend:
    build:
      context: ./backend/company-events/
      dockerfile: Dockerfile
    container_name: nest_backend
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    #    secrets:
    #      - db_user
    #      - db_password
    #      - keycloak_admin
    #      - keycloak_admin_password
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=events_db
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_URL=${KEYCLOAK_URL}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - NODE_ENV=development
    volumes:
      - ./backend/company-events:/app
      - /app/node_modules
    command: npm run start:dev
    networks:
      - company-network
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 3000" ]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:latest
    container_name: events_db
    ports:
      - "5433:5432"
    #    secrets:
    #      - db_user
    #      - db_password
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=events_db
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - company-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d events_db" ]
      interval: 30s
      timeout: 10s
      retries: 5

  keycloak-db:
    image: postgres:latest
    container_name: keycloak-db
    ports:
      - "5434:5432"
    #    secrets:
    #      - keycloak_db_user
    #      - keycloak_db_password
    environment:
      - POSTGRES_USER=${KEYCLOAK_DB_USER}
      - POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - POSTGRES_DB=keycloak
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    networks:
      - company-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d keycloak" ]
      interval: 30s
      timeout: 10s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    depends_on:
      keycloak-db:
        condition: service_healthy
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    command: start-dev
    #   secrets:
    #      - keycloak_admin
    #      - keycloak_admin_password
    #      - keycloak_db_user
    #      - keycloak_db_password
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KEYCLOAK_ADMIN}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-db:5432/keycloak
      - KC_DB_USERNAME=${KEYCLOAK_DB_USER}
      - KC_DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
      #      - KC_HOSTNAME_URL=http://keycloak:8080
      #      - KC_HOSTNAME_ADMIN=http://keycloak:8080
      #      - KC_HOSTNAME_FRONTEND=http://keycloak:8080
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_URL=http://keycloak:8080
      - KC_HOSTNAME_ADMIN_URL=http://keycloak:8080
    ports:
      - "8080:8080"
    networks:
      - company-network
    healthcheck:
      test: [ "CMD-SHELL", "timeout 5 bash -c '</dev/tcp/localhost/8080' || exit 1" ]
      interval: 45s
      timeout: 15s
      retries: 5
      start_period: 150s

  frontend:
    build:
      context: ./frontend/company-events/
      dockerfile: Dockerfile
    container_name: angular_frontend
    ports:
      - "4200:4200"
    volumes:
      - ./frontend/company-events/:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
      feedback:
        condition: service_healthy
    networks:
      - company-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4200" ]
      interval: 30s
      timeout: 10s
      retries: 5

  feedback:
    build:
      context: ./backend/feedback
      dockerfile: Dockerfile
    container_name: feedback_service
    ports:
      - "3001:3000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=events_db
      - NODE_ENV=development
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_URL=${KEYCLOAK_URL}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    volumes:
      - ./backend/feedback:/app
      - /app/node_modules
    networks:
      - company-network
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 3000" ]
      interval: 30s
      timeout: 10s
      retries: 5


  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
      - keycloak
    networks:
      - company-network


volumes:
  db_data:
  keycloak_db_data:

networks:
  company-network:
    driver: bridge

#secrets:
#  db_user:
#    external: true
#  db_password:
#    external: true
#  keycloak_admin:
#    external: true
#  keycloak_admin_password:
#    external: true
#  keycloak_db_user:
#    external: true
#  keycloak_db_password:
#    external: true
#  keycloak_client_secret:
#    external: true
